# .github/workflows/build-wasm.yml
# Compilaci√≥n autom√°tica de wc3dat.wasm para SAngelcraft/wc3data

name: Build WC3Data WASM

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:  # Permite ejecutar manualmente

jobs:
  build-wasm:
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout c√≥digo
      uses: actions/checkout@v4
      
    - name: üîß Setup Emscripten
      uses: mymindstorm/setup-emsdk@v14
      with:
        version: 3.1.45
        
    - name: ‚úÖ Verificar Emscripten
      run: |
        emcc --version
        echo "Emscripten configurado correctamente"
        
    - name: üìÅ Crear directorios
      run: |
        mkdir -p build
        mkdir -p src/maps
        
    - name: üîç Explorar estructura del proyecto
      run: |
        echo "=== Estructura del proyecto ==="
        find . -name "*.cpp" -o -name "*.h" -o -name "*.hpp" | head -20
        echo ""
        echo "=== Contenido de DataGen ==="
        ls -la DataGen/ || echo "Directorio DataGen no encontrado"
        echo ""
        
    - name: üî® Compilar DataGen a WebAssembly (Modo Seguro)
      run: |
        echo "Compilando wc3dat.wasm..."
        
        # Buscar archivos cpp en DataGen
        CPP_FILES=$(find DataGen -name "*.cpp" 2>/dev/null || echo "DataGen/main.cpp")
        echo "Archivos encontrados: $CPP_FILES"
        
        # Compilaci√≥n b√°sica primero
        emcc $CPP_FILES \
          -O2 \
          -s WASM=1 \
          -s EXPORTED_RUNTIME_METHODS='["ccall","cwrap"]' \
          -s EXPORTED_FUNCTIONS='["_malloc","_free"]' \
          -s ALLOW_MEMORY_GROWTH=1 \
          -s MODULARIZE=1 \
          -s EXPORT_NAME="WC3Data" \
          -s ENVIRONMENT=web \
          -s TOTAL_MEMORY=64MB \
          -I./DataGen \
          -std=c++11 \
          -w \
          -o build/wc3dat.js || {
            echo "‚ùå Error en compilaci√≥n. Intentando compilaci√≥n m√≠nima..."
            
            # Compilaci√≥n m√≠nima de respaldo
            emcc DataGen/main.cpp \
              -O1 \
              -s WASM=1 \
              -s MODULARIZE=1 \
              -s EXPORT_NAME="WC3Data" \
              -I./DataGen \
              -o build/wc3dat.js || {
                echo "‚ùå Compilaci√≥n fall√≥ completamente"
                echo "Contenido de main.cpp:"
                head -20 DataGen/main.cpp 2>/dev/null || echo "main.cpp no encontrado"
                exit 1
              }
          }
          
    - name: üìã Verificar archivos generados
      run: |
        echo "=== Estado de la compilaci√≥n ==="
        if [ -f "build/wc3dat.js" ]; then
          echo "‚úÖ wc3dat.js generado"
          ls -la build/wc3dat.js
        else
          echo "‚ùå wc3dat.js no encontrado"
        fi
        
        if [ -f "build/wc3dat.wasm" ]; then
          echo "‚úÖ wc3dat.wasm generado correctamente"
          echo "üìä Tama√±o: $(du -h build/wc3dat.wasm | cut -f1)"
        else
          echo "‚ö†Ô∏è  wc3dat.wasm no encontrado - puede ser compilaci√≥n solo JS"
        fi
        
        echo "=== Todos los archivos en build/ ==="
        ls -la build/ 2>/dev/null || echo "Directorio build vac√≠o"
        
    - name: üì¶ Copiar archivos a src/maps
      run: |
        mkdir -p src/maps
        
        if [ -f "build/wc3dat.js" ]; then
          cp build/wc3dat.js src/maps/wc3dat.jscc
          echo "‚úÖ Copiado wc3dat.jscc"
        fi
        
        if [ -f "build/wc3dat.wasm" ]; then
          cp build/wc3dat.wasm src/maps/wc3dat.wasm
          echo "‚úÖ Copiado wc3dat.wasm"
        fi
        
        echo "Contenido final de src/maps/:"
        ls -la src/maps/ 2>/dev/null || echo "Directorio src/maps vac√≠o"
        
    - name: üì§ Subir artefactos
      uses: actions/upload-artifact@v4
      with:
        name: wc3dat-wasm-files
        path: |
          build/wc3dat.js
          build/wc3dat.wasm
          src/maps/wc3dat.jscc
          src/maps/wc3dat.wasm
        retention-days: 30
        
    - name: üè∑Ô∏è Crear release autom√°tico
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: wasm-build-${{ github.run_number }}
        name: "WC3Data WASM Build #${{ github.run_number }}"
        body: |
          üéÆ Compilaci√≥n autom√°tica de wc3dat.wasm
          
          **Archivos incluidos:**
          - `wc3dat.js` - Loader JavaScript
          - `wc3dat.wasm` - M√≥dulo WebAssembly
          - `wc3dat.jscc` - Loader para proyecto wc3data
          
          **Uso:**
          ```javascript
          import WC3Data from './wc3dat.js';
          const module = await WC3Data();
          ```
          
          Generado autom√°ticamente el {{ steps.date.outputs.date }}
        files: |
          build/wc3dat.js
          build/wc3dat.wasm
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
